{"version":3,"sources":["webpack:///./node_modules/@styled-icons/boxicons-regular/CalendarAlt/CalendarAlt.esm.js","webpack:///./node_modules/@styled-icons/material-outlined/WatchLater/WatchLater.esm.js","webpack:///./src/components/PostItem/styled.js","webpack:///./src/components/PostItem/index.js","webpack:///./src/components/Pagination/styled.js","webpack:///./src/components/Pagination/index.js","webpack:///./src/components/ListWrapper/styled.js","webpack:///./src/templates/blog-list.js"],"names":["CalendarAlt","props","ref","iconAttrs","iconVerticalAlign","iconViewBox","fill","d","displayName","WatchLater","width","height","PostItemLink","styled","AniLink","PostItemWrapper","section","media","lessThan","PostItemTag","div","background","PostItemInfo","PostItemDate","time","CalendarIcon","TimerIcon","PostItemTitle","h1","PostItemDescription","p","PostItem","slug","category","date","timeToRead","title","description","to","cover","direction","bg","getThemeColor","duration","PaginationWrapper","Pagination","isFirst","isLast","currentPage","numPages","prevPage","nextPage","ListWrapper","query","BlogList","postList","data","allMarkdownRemark","edges","pageContext","Layout","map","node","frontmatter","fields","key"],"mappings":"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","file":"component---src-templates-blog-list-js-d3c0fe4f0b0ebe1c87f0.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var CalendarAlt = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(StyledIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    d: \"M4.998 8H19v12H4.998z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2.999 6v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2V6c0-1.103-.897-2-2-2h-2V2h-2v2h-6V2h-2v2h-2c-1.103 0-2 .897-2 2zm16.002 14H4.999V8h14l.002 12z\"\n  }));\n});\nCalendarAlt.displayName = 'CalendarAlt';\nexport var CalendarAltDimensions = {\n  height: 24,\n  width: 24\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var WatchLater = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(StyledIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    width: 24,\n    height: 24,\n    fill: \"none\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10 10-4.5 10-10S17.5 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm.5-13H11v6l5.2 3.2.8-1.3-4.5-2.7V7z\"\n  }));\n});\nWatchLater.displayName = 'WatchLater';\nexport var WatchLaterDimensions = {\n  height: 24,\n  width: 24\n};","import styled from \"styled-components\"\r\nimport media from \"styled-media-query\"\r\nimport AniLink from \"gatsby-plugin-transition-link/AniLink\"\r\nimport { CalendarAlt } from \"@styled-icons/boxicons-regular/CalendarAlt\"\r\nimport { WatchLater } from \"@styled-icons/material-outlined/WatchLater\"\r\n\r\nexport const PostItemLink = styled(AniLink)`\r\n  color: var(--texts);\r\n  display: flex;\r\n  text-decoration: none;\r\n  &:hover {\r\n    color: var(--highlight);\r\n  }\r\n\r\n  body#grid & {\r\n    background-color: var(--background);\r\n  }\r\n`\r\n\r\nexport const PostItemWrapper = styled.section`\r\n  align-items: center;\r\n  display: flex;\r\n  padding: 2rem 3rem;\r\n  width: 100%;\r\n\r\n  body#grid & {\r\n    border: none;\r\n    padding: 2rem 1rem;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n  }\r\n\r\n  ${media.lessThan(\"large\")`\r\n    align-items: flex-start;\r\n    flex-direction: column;\r\n    padding: 2rem 1rem;\r\n  `}\r\n`\r\n\r\nexport const PostItemTag = styled.div`\r\n  font-family: \"Lora\", serif;\r\n  align-items: center;\r\n  background: ${props =>\r\n    props.background ? props.background : \"var(--highlight)\"};\r\n  border-radius: 50%;\r\n  color: var(--black);\r\n  display: flex;\r\n  font-size: 32px;\r\n  font-weight: 700;\r\n  justify-content: center;\r\n  min-height: 120px;\r\n  min-width: 120px;\r\n  text-transform: uppercase;\r\n\r\n  body#grid & {\r\n    margin-bottom: 1.5rem;\r\n  }\r\n\r\n  ${media.lessThan(\"large\")`\r\n    border-radius: 0;\r\n    font-size: 1rem;\r\n    min-height: auto;\r\n    min-width: auto;\r\n    padding: .2rem .5rem;\r\n    margin-bottom: .7rem;\r\n  `}\r\n`\r\n\r\nexport const PostItemInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-left: 1.5rem;\r\n\r\n  body#grid & {\r\n    text-align: center;\r\n    margin-left: unset;\r\n  }\r\n\r\n  ${media.lessThan(\"large\")`\r\n    margin: 0;\r\n  `}\r\n`\r\n\r\nexport const PostItemDate = styled.time`\r\n  font-size: 0.9rem;\r\n  display: flex;\r\n`\r\n\r\nexport const CalendarIcon = styled(CalendarAlt)`\r\n  width: 16px;\r\n  margin-right: 4px;\r\n`\r\n\r\nexport const TimerIcon = styled(WatchLater)`\r\n  width: 16px;\r\n  margin: 0px 4px 0px 12px;\r\n`\r\n\r\nexport const PostItemTitle = styled.h1`\r\n  font-family: \"Lora\", serif;\r\n  font-size: 32px;\r\n  font-weight: 700;\r\n  margin: 0.2rem 0 0.5rem;\r\n\r\n  body#grid & {\r\n    line-height: 1.1;\r\n    margin: 0.8rem 0;\r\n  }\r\n`\r\n\r\nexport const PostItemDescription = styled.p`\r\n  font-size: 1.2rem;\r\n  font-weight: 300;\r\n  line-height: 1.2;\r\n  margin-top: 16px;\r\n`\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport getThemeColor from '../../utils/getThemeColor'\r\n\r\nimport * as S from \"./styled\"\r\n\r\nconst PostItem = ({\r\n  slug,\r\n  background,\r\n  category,\r\n  date,\r\n  timeToRead,\r\n  title,\r\n  description,\r\n}) => (\r\n  <S.PostItemLink to={slug} cover direction=\"right\" bg={getThemeColor()} duration={0.6}>\r\n    <S.PostItemWrapper>\r\n      <S.PostItemTag background={background}>{category}</S.PostItemTag>\r\n      <S.PostItemInfo>\r\n        <S.PostItemTitle>{title}</S.PostItemTitle>\r\n        <S.PostItemDate>\r\n          <S.CalendarIcon /> {date} <S.TimerIcon /> {timeToRead} min de leitura\r\n        </S.PostItemDate>\r\n        <S.PostItemDescription>{description}</S.PostItemDescription>\r\n      </S.PostItemInfo>\r\n    </S.PostItemWrapper>\r\n  </S.PostItemLink>\r\n)\r\n\r\nPostItem.propTypes = {\r\n  slug: PropTypes.string.isRequired,\r\n  background: PropTypes.string,\r\n  category: PropTypes.string.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n  timeToRead: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default PostItem\r\n","import styled from \"styled-components\"\r\nimport media from \"styled-media-query\"\r\n\r\nexport const PaginationWrapper = styled.section`\r\n  align-items: center;\r\n  border-top: 1px solid var(--borders);\r\n  color: var(--texts);\r\n  display: flex;\r\n  padding: 1.5rem 3rem;\r\n  justify-content: space-between;\r\n  a {\r\n    color: var(--texts);\r\n    text-decoration: none;\r\n    transition: color 0.5s;\r\n    &:hover {\r\n      color: var(--highlight);\r\n    }\r\n  }\r\n\r\n  ${media.lessThan(\"large\")`\r\n    font-size: .8rem;\r\n    padding: 1rem;\r\n  `}\r\n`\r\n","import React from \"react\"\r\nimport propTypes from \"prop-types\"\r\nimport AniLink from \"gatsby-plugin-transition-link/AniLink\"\r\n\r\nimport getThemeColor from \"../../utils/getThemeColor\"\r\n\r\nimport * as S from \"./styled\"\r\n\r\nconst Pagination = ({\r\n  isFirst,\r\n  isLast,\r\n  currentPage,\r\n  numPages,\r\n  prevPage,\r\n  nextPage,\r\n}) => (\r\n  <S.PaginationWrapper>\r\n    {!isFirst && (\r\n      <AniLink cover direction=\"left\" bg={getThemeColor()} duration={0.6} to={prevPage}>\r\n        ← página anterior\r\n      </AniLink>\r\n    )}\r\n    <p>\r\n      {currentPage} de {numPages}\r\n    </p>\r\n    {!isLast && (\r\n      <AniLink cover direction=\"right\" bg={getThemeColor()} duration={0.6} to={nextPage}>\r\n        próxima página →\r\n      </AniLink>\r\n    )}\r\n  </S.PaginationWrapper>\r\n)\r\n\r\nPagination.propTypes = {\r\n  isFirst: propTypes.bool.isRequired,\r\n  isLast: propTypes.bool.isRequired,\r\n  currentPage: propTypes.number.isRequired,\r\n  numPages: propTypes.number.isRequired,\r\n  prevPage: propTypes.string,\r\n  nextPage: propTypes.string,\r\n}\r\n\r\nexport default Pagination\r\n","import styled from \"styled-components\"\r\n\r\nexport const ListWrapper = styled.section`\r\n  body#grid & {\r\n    background-color: var(--borders);\r\n    border-bottom: 1px solid var(--borders);\r\n    display: grid;\r\n    grid-area: posts;\r\n    grid-gap: 1px;\r\n    grid-template-columns: repeat(auto-fit, minmax(380px, 1fr));\r\n  }\r\n`","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/Layout\"\r\nimport SEO from \"../components/seo\"\r\nimport PostItem from \"../components/PostItem\"\r\nimport Pagination from \"../components/Pagination\"\r\n\r\nimport * as S from \"../components/ListWrapper/styled\"\r\n\r\nconst BlogList = props => {\r\n  const postList = props.data.allMarkdownRemark.edges\r\n\r\n  const { currentPage, numPages } = props.pageContext\r\n  const isFirst = currentPage === 1\r\n  const isLast = currentPage === numPages\r\n  const prevPage = currentPage - 1 === 1 ? \"/\" : `/page/${currentPage - 1}`\r\n  const nextPage = `/page/${currentPage + 1}`\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Home\" />\r\n      <S.ListWrapper>\r\n        {postList.map(\r\n          ({\r\n            node: {\r\n              frontmatter: { background, category, date, description, title },\r\n              timeToRead,\r\n              fields: { slug },\r\n            },\r\n          }) => (\r\n            <PostItem\r\n              slug={slug}\r\n              background={background}\r\n              category={category}\r\n              date={date}\r\n              timeToRead={timeToRead}\r\n              title={title}\r\n              description={description}\r\n              key={slug}\r\n            />\r\n          )\r\n        )}\r\n      </S.ListWrapper>\r\n\r\n      <Pagination\r\n        isFirst={isFirst}\r\n        isLast={isLast}\r\n        currentPage={currentPage}\r\n        numPages={numPages}\r\n        prevPage={prevPage}\r\n        nextPage={nextPage}\r\n      />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query PostList($skip: Int!, $limit: Int!) {\r\n    allMarkdownRemark(\r\n      sort: { fields: frontmatter___date, order: DESC }\r\n      limit: $limit\r\n      skip: $skip\r\n    ) {\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            background\r\n            category\r\n            date(locale: \"pt-br\", formatString: \"DD [de] MMMM [de] YYYY\")\r\n            description\r\n            title\r\n          }\r\n          timeToRead\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default BlogList\r\n"],"sourceRoot":""}